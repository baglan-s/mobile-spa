version: '3.8'

networks:
  ozakee:
    driver: bridge

services:
  nginx:
    image: nginx:stable-alpine
    container_name: ozakee-nginx
    ports:
      - 8000:8000
      - 8001:8001
    volumes:
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/logs:/var/log/nginx
      - ./backend:/app
      - ./frontend:/frontend
      - ./docker/cron/root:/var/spool/cron/crontabs/root
    networks:
      - ozakee
    depends_on:
      - php
  
  postgres:
    image: postgres:14-alpine3.15
    container_name: ozakee-postgres
    ports:
      - "5433:5433"
    restart: unless-stopped
    tty: true
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      DB_DATABASE_TESTING: ${DB_DATABASE_TESTING}
    volumes:
      - ./docker/postgres/pg-data:/var/lib/postgresql/data
      - ./docker/postgres:/docker-entrypoint-initdb.d
    networks:
      - ozakee

  php:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: ozakee-php
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: ${DB_CONNECTION}://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE}
    volumes:
      - ./backend:/app
      - ./docker/cron/root:/var/spool/cron/crontabs/root
    networks:
      - ozakee

  composer:
    image: composer:latest
    container_name: ozakee-composer
    volumes:
      - ./backend:/app
    depends_on:
      - php
    networks:
      - ozakee
    command: "composer install"

  nodejs:
    image: node:16.15-alpine
    container_name: sip-node
    working_dir: /frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/frontend
      # - ./docker/node/entrypoint.sh:/docker-entrypoint.sh
    networks:
      - ozakee
    command: >
      sh -c "npm install && npm run build"